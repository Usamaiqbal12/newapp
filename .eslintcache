[{"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\index.js":"1","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\StateProvider.js":"2","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\reducer.js":"3","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\Dummy.js":"4","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\App.js":"5","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Header.js":"6","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\SignUp.js":"7","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\SignIn.js":"8","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\PrivateRoutes.js":"9","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\CreateDatasetModal.js":"10","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\services\\Api.js":"11","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\services\\user\\userApi.js":"12","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Home.js":"13","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\footer\\Footer.js":"14","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\ListDataset.jsx":"15","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\DatasetDetails.jsx":"16","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\Manual.jsx":"17","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\DiscussionMode.jsx":"18","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\Profile.jsx":"19","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\EditProfile.jsx":"20","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Author\\Profile.jsx":"21","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\CreateDataset.js":"22","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\Facebook.js":"23","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\Google.js":"24","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Loading.jsx":"25","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\AuthorsList.jsx":"26","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\Params.js":"27","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\EmailActivation404.jsx":"28","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\EmailActivation.jsx":"29","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\RSkeleton.js":"30","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\footer\\MobileFooter.js":"31"},{"size":686,"mtime":1611842304224,"results":"32","hashOfConfig":"33"},{"size":487,"mtime":1611846107731,"results":"34","hashOfConfig":"33"},{"size":777,"mtime":1613680044090,"results":"35","hashOfConfig":"33"},{"size":5507,"mtime":1611842304220,"results":"36","hashOfConfig":"33"},{"size":4234,"mtime":1613679929196,"results":"37","hashOfConfig":"33"},{"size":13489,"mtime":1613303233805,"results":"38","hashOfConfig":"33"},{"size":9638,"mtime":1613678330616,"results":"39","hashOfConfig":"33"},{"size":7579,"mtime":1613305493793,"results":"40","hashOfConfig":"33"},{"size":572,"mtime":1611846110198,"results":"41","hashOfConfig":"33"},{"size":1861,"mtime":1613662784355,"results":"42","hashOfConfig":"33"},{"size":4059,"mtime":1613678048309,"results":"43","hashOfConfig":"33"},{"size":1121,"mtime":1613678042094,"results":"44","hashOfConfig":"33"},{"size":6796,"mtime":1613302555792,"results":"45","hashOfConfig":"33"},{"size":1392,"mtime":1613306681794,"results":"46","hashOfConfig":"33"},{"size":2815,"mtime":1613680099312,"results":"47","hashOfConfig":"33"},{"size":4804,"mtime":1613232233696,"results":"48","hashOfConfig":"33"},{"size":7640,"mtime":1613304929764,"results":"49","hashOfConfig":"33"},{"size":8805,"mtime":1613301226796,"results":"50","hashOfConfig":"33"},{"size":4581,"mtime":1613249611881,"results":"51","hashOfConfig":"33"},{"size":8565,"mtime":1613304997880,"results":"52","hashOfConfig":"33"},{"size":5442,"mtime":1613249686636,"results":"53","hashOfConfig":"33"},{"size":3857,"mtime":1613247496805,"results":"54","hashOfConfig":"33"},{"size":1372,"mtime":1611409833077,"results":"55","hashOfConfig":"33"},{"size":1854,"mtime":1613679965998,"results":"56","hashOfConfig":"33"},{"size":236,"mtime":1611849326913,"results":"57","hashOfConfig":"33"},{"size":3711,"mtime":1613303606797,"results":"58","hashOfConfig":"33"},{"size":2745,"mtime":1613168403553,"results":"59","hashOfConfig":"33"},{"size":271,"mtime":1612719201873,"results":"60","hashOfConfig":"33"},{"size":404,"mtime":1612886814573,"results":"61","hashOfConfig":"33"},{"size":377,"mtime":1613249528792,"results":"62","hashOfConfig":"33"},{"size":1576,"mtime":1613302448110,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"nq0mzy",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"67"},"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\index.js",["143","144"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n// import SignIn from \"./components/SignIn\";\r\nimport App from \"./App\";\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import \"font-awesome/css/font-awesome.min.css\";\r\nimport reducer, { initialState } from \"./reducer\";\r\nimport { StateProvider } from \"./StateProvider\";\r\nimport Header from \"./components/Header\";\r\nimport Dashboard from \"./components/dataset/Dummy\";\r\n\r\nReactDOM.render(\r\n  <StateProvider initialState={initialState} reducer={reducer}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StateProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["145","146"],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\StateProvider.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\reducer.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\Dummy.js",["147","148","149","150","151","152","153"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n// import { mainListItems, secondaryListItems } from \"./listItems\";\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\nimport App from \"./../../App\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {/* <List>{mainListItems}</List> */}\r\n        <Divider />\r\n        {/* <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <App />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\App.js",["154","155","156"],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Header.js",["157"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../services/Api\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SportsEsportsIcon from \"@material-ui/icons/SportsEsports\";\r\nconst drawerWidth = window.screen.width < 640 ? 190 : 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: window.screen.width < 600 ? 15 : 24,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft:window.screen.width<600&&'10px'\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n  const [auth, setAuth] = useState(false);\r\n  const [, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleMenuClose = (e) => {\r\n    setAnchorEl(null);\r\n    console.log(e);\r\n    handleMobileMenuClose();\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      setAuth(true);\r\n    }\r\n  }, [auth]);\r\n  const logout = (e) => {\r\n    setAuth(false);\r\n    localStorage.removeItem(\"jwt\");\r\n    dispatch({\r\n      type: \"ADDDATASET\",\r\n      data: [],\r\n    });\r\n    history.push(\"/signin\");\r\n    window.location.reload()\r\n  };\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <Link to=\"/profile\" style={{ color: \"inherit\", textDecoration: \"none\" }}>\r\n        <MenuItem name=\"pro\" onClick={handleMenuClose}>\r\n          Profile\r\n        </MenuItem>{\" \"}\r\n      </Link>\r\n      <Link\r\n        to=\"/editprofile\"\r\n        style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n      >\r\n        {\" \"}\r\n        <MenuItem onClick={handleMenuClose}>Edit Profile</MenuItem>{\" \"}\r\n      </Link>\r\n    </Menu>\r\n  );\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={() => !isAuthenticated()?history.push(\"/signin\"):logout()}>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <MailIcon />\r\n        </IconButton>\r\n        {!isAuthenticated() ? (\r\n          <p style={{ margin: 0 }} >\r\n            Login\r\n          </p>\r\n        ) : (\r\n          <p style={{ margin: 0 }} color=\"inherit\">\r\n            logout\r\n          </p>\r\n        )}\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p style={{ margin: 0 }}>Notifications</p>\r\n      </MenuItem>\r\n      \r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p style={{ margin: 0 }}>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        style={{backgroundColor:'#443F39'}}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          {isAuthenticated() && window.screen.width>600 && (\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(\r\n                classes.menuButton,\r\n                open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n          <Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              QOTRT\r\n            </Typography>\r\n          </Link>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              right: 0,\r\n              marginRight: window.screen.width < 600 ? \"0px\" : \"24px\",\r\n            }}\r\n          >\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              {!isAuthenticated() ? (\r\n                <Button color=\"inherit\" onClick={() => history.push(\"/signin\")}>\r\n                  Login\r\n                </Button>\r\n              ) : (\r\n                <Button color=\"inherit\" onClick={logout}>\r\n                  logout\r\n                </Button>\r\n              )}\r\n              {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n             {isAuthenticated() && (\r\n               <>\r\n              <IconButton\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge badgeContent={1} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n             \r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton\r\n                aria-label=\"show more\"\r\n                aria-controls={mobileMenuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      {isAuthenticated() && (\r\n        <Drawer\r\n          variant={window.screen.width < 800 ? \"temporary\" : \"permanent\"}\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div>\r\n            <Link to=\"/\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/profile\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <PersonIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Profile\" />\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/dataset\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <ListIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Datasets\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/editprofile\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <EditIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Edit Profile\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to=\"#\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <SportsEsportsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Game One\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"#\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <SportsEsportsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Game Two\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"#\" style={{ color: \"black\" }}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <SportsEsportsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Game three\" />\r\n              </ListItem>\r\n            </Link>\r\n          </div>\r\n        </Drawer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\SignUp.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\SignIn.js",["158","159","160","161","162","163"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {\r\n  FacebookLoginButton,\r\n  GoogleLoginButton,\r\n} from \"react-social-login-buttons\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Facebook from \"./user/Facebook\";\r\nimport Google from \"./user/Google\";\r\nimport {\r\n  signIn,\r\n  authenticate,\r\n  isAuthenticated,\r\n  datasetListFunc,\r\n} from \"../services/Api\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { getUser } from \"../services/user/userApi\";\r\nimport { green, purple } from \"@material-ui/core/colors\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link to=\"/\" color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    \"&:hover\": {\r\n      backgroundColor: \"#263238\",\r\n    },\r\n  },\r\n}))(Button);\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(-5),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 5, 0.1),\r\n    width: \"78%\",\r\n    height: window.screen.width<600?\"40px\":'50px',\r\n    fontSize: window.screen.width<600?\"16px\":\"19px\",\r\n    textTransform: \"capitalize\",\r\n    backgroundColor: \"#455a64\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const [, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const [loading, setloading] = useState(false);\r\n  const history = useHistory();\r\n  const [userData, setuserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    Email: false,\r\n    Password: false,\r\n  });\r\n  const handleChange = (e) => {\r\n    setuserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setloading(true);\r\n    signIn(JSON.stringify(userData))\r\n      .then((data) => {\r\n        if (data.status === \"Failure\") {\r\n          if (data.message === \"Password\") {\r\n            setErrors({ ...errors, Email: false, Password: true });\r\n          } else if (data.message === \"Email\") {\r\n            setErrors({ ...errors, Email: true, Password: false });\r\n          } else if (data.message === \"Activation\") {\r\n            history.push(\"/emailactivation404\");\r\n          }\r\n          setloading(false);\r\n        } else if (data.data.token) {\r\n          setloading(false);\r\n          authenticate(data.data.token, () => {\r\n            setuserData({ email: \"\", password: \"\" });\r\n\r\n            dispatch({\r\n              type: \"ADDUSER\",\r\n              data: data.data.data,\r\n            });\r\n\r\n            datasetListFunc(data.data.id).then((items) => {\r\n              dispatch({\r\n                type: \"ADDDATASET\",\r\n                data: items.data,\r\n              });\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const performRedirect = () => {\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"px-3 signin\">\r\n      {loading && <Loading />}\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <Container component=\"main\" maxWidth=\"xs\" className=\"bg-white mt-3 rounded\">\r\n            {\" \"}\r\n            <Grid xs={12} item>\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                <h2 className=\"dataset__text rounded text-dark px-3 mt-2\">\r\n                  <span\r\n                    style={{ fontSize: window.screen.width < 640 && \"25px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    Sign In{\" \"}\r\n                  </span>\r\n                </h2>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={userData.email}\r\n                    helperText={errors.Email && \"Email does not exist\"}\r\n                    error={errors.Email}\r\n                    fullWidth\r\n                    size={'small'}\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    size={'small'}\r\n                    value={userData.Password}\r\n                    helperText={errors.Password && \"Invalid Password\"}\r\n                    error={errors.Password}\r\n                    required\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                    label=\"Remember me\"\r\n                  />\r\n                  <ColorButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Sign In\r\n                  </ColorButton>\r\n\r\n                  <FacebookLoginButton className=\"pl-2 facebook-login pr-0 mt-2\">\r\n                    <Facebook />\r\n                  </FacebookLoginButton>\r\n                  <GoogleLoginButton className=\"google-login pr-0 mt-2\">\r\n                    <Google />\r\n                  </GoogleLoginButton>\r\n                  <Grid container className=\"my-3\">\r\n                    <Grid item sm={5} xs={12}>\r\n                      <Link to=\"/\" variant=\"body2\">\r\n                        Forgot password?\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item sm={7}>\r\n                      <Link to=\"/signup\" variant=\"body2\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </div>\r\n              {performRedirect()}\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\PrivateRoutes.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\CreateDatasetModal.js",["164","165"],"import Modal from \"react-modal\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CreateDataset from \"./CreateDataset\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    \r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -45%)\",\r\n    width: window.screen.width < 700 ? \"80%\" : \"40%\",\r\n  },\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nModal.setAppElement(\"#root\");\r\nfunction CreateDatasetModal(props) {\r\n  const classes = useStyles();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn text-light mr-3 col-xs-12 col-sm-12 mt-2 col-md-3 mb-3\"\r\n        style={{ backgroundColor: \"#353431\" }}\r\n        onClick={handleOpenModal}\r\n      >\r\n        {props.create ? \"Add Dataset\" : \"Update Dataset\"}\r\n      </button>\r\n      <Modal\r\n        isOpen={showModal}\r\n        contentLabel=\"onRequestClose Example\"\r\n        onRequestClose={handleCloseModal}\r\n        style={customStyles}\r\n      >\r\n        <h4>{props.create ? \"Create Dataset\" : \"Update Dataset\"}</h4>\r\n        <CreateDataset handleClose={handleCloseModal} create={props.create} id={props.id} classes={classes} />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default CreateDatasetModal;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\services\\Api.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\services\\user\\userApi.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Home.js",["166","167","168","169","170","171","172","173","174"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { quoteOfTheDay } from \"../services/Api\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport RSkeleton from \"./RSkeleton\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    // height: \"100vh\",\r\n    marginBottom:'50px'\r\n    },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    flexDirection: \"column\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"white\",\r\n  },\r\n}));\r\nconst Home = () => {\r\n  const [{qod},dispatch] = useStateValue()\r\n  useEffect(() => {\r\n    if (qod.length<1){\r\n    quoteOfTheDay().then((data) => {\r\n      dispatch({\r\n        type: \"qod\",\r\n        data: data,\r\n      });\r\n    });\r\n  }\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{ backgroundColor: \"#353431\" }}\r\n            >\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h6\"\r\n                color=\"primary\"\r\n                gutterBottom\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                Quote of The Day\r\n              </Typography>\r\n              <div className=\"mt-10\">\r\n                <blockquote\r\n                  className=\"quote-card\"\r\n                  style={{ boxShadow: \"none\", backgroundColor: \"#353431\" }}\r\n                >\r\n                  <h6 className='text-light' >{qod[0] ? qod[0].quote : <RSkeleton count={3} width={'100%'}/>}</h6>\r\n                  <cite className='text-light'>\r\n                    {\" \"}\r\n                    {qod\r\n                      ? qod.map((v, i) => {\r\n                          return v.author;\r\n                        })\r\n                      : \"\"}\r\n                  </cite>\r\n                </blockquote>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{ backgroundColor: \"#353431\" }}\r\n            >\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h6\"\r\n                color=\"primary\"\r\n                // gutterBottom\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                Multiple choice\r\n              </Typography>\r\n\r\n              <table className=\"table table-dark table-hover rounded\">\r\n                <thead className=\"thead\"  style={{backgroundColor:'#443F39'}}>\r\n                  <tr style={{ cursor: \"pointer\", fontFamily: \"cursive\" }}>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Score</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>Afnan</td>\r\n                    <td>1</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">2</th>\r\n                    <td>Mubeen</td>\r\n                    <td>2</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{ backgroundColor: \"#353429\" }}\r\n            >\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h6\"\r\n                color=\"primary\"\r\n                // gutterBottom\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                Name to quote\r\n              </Typography>\r\n\r\n              <table className=\"table table-hover table-dark rounded\">\r\n                <thead className=\"thead\"  style={{backgroundColor:'#443F39'}}>\r\n                  <tr style={{ cursor: \"pointer\", fontFamily: \"cursive\" }}>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Score</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>Afnan</td>\r\n                    <td>1</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">2</th>\r\n                    <td>Mubeen</td>\r\n                    <td>0</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{ backgroundColor: \"#353439\" }}\r\n            >\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h6\"\r\n                color=\"primary\"\r\n                // gutterBottom\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                Photo to quote\r\n              </Typography>\r\n\r\n              <table className=\"table table-hover table-dark\">\r\n                <thead className=\"thead\"  style={{backgroundColor:'#443F39'}}>\r\n                  <tr style={{ cursor: \"pointer\", fontFamily: \"cursive\" }}>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Score</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>Afnan</td>\r\n                    <td>2</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">2</th>\r\n                    <td>Mubeen</td>\r\n                    <td>4</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\footer\\Footer.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\ListDataset.jsx",["175","176","177","178","179"],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\DatasetDetails.jsx",["180","181"],"import { LinearProgress } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  deleteDatasetFunc,\r\n  getDataSet,\r\n  datasetListFunc,\r\n} from \"../../services/Api\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport Loading from \"../Loading\";\r\nimport RSkeleton from \"../RSkeleton\";\r\nimport AuthorsList from \"./AuthorsList\";\r\nimport CreateDatasetModal from \"./CreateDatasetModal\";\r\nfunction DatasetDetails(props) {\r\n  const history = useHistory();\r\n  const [{ currentDataset }, dispatch] = useStateValue();\r\n  const [loading, setLoading] = useState(false);\r\n  const [foundedValue, setfoundedValue] = useState([]);\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getDataSet(params.id).then((items) => {\r\n      if (mounted) {\r\n        setfoundedValue(items.data);\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  }, [currentDataset]);\r\n\r\n  const deleteDataset = (e) => {\r\n    setLoading(true);\r\n    deleteDatasetFunc(foundedValue.id).then((data) => {\r\n      if (data.status === true) {\r\n        datasetListFunc().then((items) => {\r\n          dispatch({\r\n            type: \"ADDDATASET\",\r\n            data: items.data,\r\n          });\r\n          setLoading(false);\r\n        });\r\n        history.push(\"/dataset\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mb-5 container\" >\r\n      {loading && <Loading />}\r\n      {foundedValue && (\r\n        <>\r\n          <div className=\"jumbotron pt-3 mt-3 \" style={{backgroundColor:'#443F39'}}\r\n>\r\n            <h1 className=\"text-center\">\r\n              {\" \"}\r\n              <span className=\"pt-1 px-4 pb-1 dataset__heading rounded mb-2\">\r\n                Dataset Details\r\n              </span>\r\n            </h1>\r\n\r\n            <div className=\"dataset__detail rounded\">\r\n              <div className=\"col-sm-6 col-7 col-md-4\">\r\n                <p className=\"lead mt-0 \">\r\n                  {\" \"}\r\n                  <b className=\"dataset__text\">Dataset Name: </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className=\"dataset__text\">Dataset Type : </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className=\"dataset__text\">Authors : </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className=\"dataset__text\">Created At : </b>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-sm-6 col-5 col-md-5\">\r\n                <p className=\"lead mt-0\">\r\n                  <b className=\"dataset__text\">\r\n                    {foundedValue.dataset_name ? (\r\n                      foundedValue.dataset_name\r\n                    ) : (\r\n                      <RSkeleton />\r\n                    )}\r\n                  </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className=\"dataset__text\">\r\n                    {foundedValue.type_dataset ? (\r\n                      foundedValue.type_dataset\r\n                    ) : (\r\n                      <RSkeleton />\r\n                    )}\r\n                  </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className=\"dataset__text\">\r\n                    {foundedValue.author ? (\r\n                      foundedValue.author.length\r\n                    ) : (\r\n                      <RSkeleton />\r\n                    )}\r\n                  </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className=\"dataset__date\">\r\n                    {foundedValue.created_at ? (\r\n                      foundedValue.created_at.split(\":\")[0].split(\"T\")[0]\r\n                    ) : (\r\n                      <RSkeleton />\r\n                    )}\r\n                  </b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <hr className=\"my-4 bg-light\" />\r\n            <button\r\n              className=\"btn text-light mr-3 col-xs-12 mb-2 col-sm-12 col-md-3\"\r\n              style={{ backgroundColor: \"#353431\" }}\r\n              onClick={deleteDataset}\r\n            >\r\n              Delete Dataset\r\n            </button>\r\n            <button\r\n              className=\"btn text-light mr-3 col-xs-12 col-sm-12 col-md-3 mb-2\"\r\n              style={{ backgroundColor: \"#353431\" }}\r\n              onClick={() =>\r\n                foundedValue &&\r\n                history.push(`/discussionmode/${foundedValue.id}`)\r\n              }\r\n            >\r\n              Disucssion Mode\r\n            </button>\r\n            <CreateDatasetModal id={foundedValue.id} create={false} />\r\n          </div>\r\n          <AuthorsList foundedValue={foundedValue} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatasetDetails;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\Manual.jsx",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\DiscussionMode.jsx",["182","183"],"import React, { useEffect, useState } from \"react\";\r\nimport { discussionmode } from \"../../services/Api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\nconst DiscussionMode = (props) => {\r\n  const [values, setValues] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setloading] = useState(true);\r\n  let c = 1;\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    discussionmode(params.id).then((data) => {\r\n      if (mounted) {\r\n        setValues([...data.data]);\r\n        setloading(false);\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loading />}\r\n      <div\r\n        id=\"carouselExampleControls\"\r\n        className=\"carousel slide \"\r\n        data-ride=\"carousel\"\r\n        data-interval={false}\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          {values\r\n            ? values.map((v, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className={`carousel-item  ${c == 1 && \"active\"}`}\r\n                  >\r\n                    <h4 className=\"text-center pt-4 mb-4\">\r\n                      {\" \"}\r\n                      <span className=\"px-3 py-2 bg-light rounded text-dark dataset__text\">\r\n                        Discussion Mode\r\n                      </span>\r\n                    </h4>\r\n                    <div className=\"container rounded mb-4\" style={{ backgroundColor: \"#353429\" }}>\r\n                      <div className=\"row gutters-sm align-items-center\">\r\n                        <div className=\"col-md-4 mt-4 mb-3\">\r\n                          <div className=\"d-flex flex-column align-items-center text-center\">\r\n                            <img\r\n                              // src={\"http://localhost:8000\" + v.author.photo}\r\n                              src={\r\n                                \"https://via.placeholder.com/150\"\r\n                                // v.author.photo\r\n                              }\r\n                              alt=\"name\"\r\n                              className=\" profilePicture rounded\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-8 mt-3 mb-2 rounded mt-md-0 \">\r\n                          <div className=\"card mb-0 mt-1\" style={{ backgroundColor: \"#353429\" }}>\r\n                            <div className=\"card-body discussioninfo rounded\" style={{backgroundColor:'#443F39'}}>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 col-6 py-3\">\r\n                                  <h6 className=\"mb-2 text-white\"> Name</h6>\r\n                                  <div className=\"text-user_info\">\r\n                                    {v.author.short_name}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-6 py-3\">\r\n                                  <h6 className=\"mb-2 text-white\">Alias</h6>\r\n                                  <div className=\"text-user_info\">\r\n                                    {v.author.alias === null\r\n                                      ? \"None\"\r\n                                      : v.author.alias}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-6 py-3\">\r\n                                  <h6 className=\"mb-2 text-white\">Morality</h6>\r\n                                  <div className=\"text-user_info\">\r\n                                    {v.author.date_of_birth !== null\r\n                                      ? \"Living\"\r\n                                      : \"Deceased\"}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-6 py-3\">\r\n                                  <h6 className=\"mb-2 text-white\">\r\n                                    Attributes\r\n                                  </h6>\r\n                                  <div className=\"text-user_info\">\r\n                                    {v.author.attribute.length > 0\r\n                                      ? v.author.attribute.map((v, i) => {\r\n                                          return <span key={i}>{v}</span>;\r\n                                        })\r\n                                      : \"None\"}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-6 py-3\">\r\n                                  <h6 className=\"mb-2 text-white\">Gender</h6>\r\n                                  <div className=\"text-user_info\">\r\n                                    {(v.author.sex === \"M\" && \"Male\") ||\r\n                                      (v.author.sex === \"F\" && \"Female\")}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-6 py-3\">\r\n                                  <h6 className=\"mb-2 text-white\">\r\n                                    Date of Birth\r\n                                  </h6>\r\n                                  <div className=\"text-user_info\">\r\n                                    {v.author.date_of_birth}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <span className=\"d-none\"> {(c = c + 1)} </span>\r\n                    <div\r\n                      className=\"container rounded mb-4 text-light\"\r\n                      style={{ backgroundColor: \"#353429\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 mt-4\">\r\n                          <div className=\"quote-card_wrap position-relative\">\r\n                            <div className=\"quote-card \">\r\n                              <h6 className=\"mb-0 font-normal font-italic text-light testimonial_txt\">\r\n                                &quot;{v.quote}&quot;\r\n                              </h6>\r\n                              <h6 className=\"testimonial_auth_name mb-0 text-right mt-2 text-capitalize text-light\">\r\n                                - {v.author.short_name}\r\n                              </h6>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <div>\r\n                          <h4 className=\"w-100 pt-4 dataset__text\">\r\n                            {\" \"}\r\n                            Questions:\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <ul className=\"questions_list list-unstyled mb-0\">\r\n                        {v.questions.map((v, i) => {\r\n                          return (\r\n                            <li className=\"\" key={i}>\r\n                              <span>\r\n                                <b>{i + 1}</b>\r\n                              </span>\r\n                              {v.title}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                      <button\r\n                        onClick={() => history.goBack()}\r\n                        className=\"btn text-light my-3 col-12 col-sm-3\"\r\n                        style={{backgroundColor:'#443F39'}}\r\n                      >\r\n                        Back to Dataset\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselExampleControls\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon \"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only colors-control\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselExampleControls\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DiscussionMode;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\Profile.jsx",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\EditProfile.jsx",["184","185","186","187","188","189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  // Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { updateUser } from \"../../services/user/userApi\";\r\nimport Loading from \"../Loading\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: window.screen.width < 640 ? theme.spacing(1) : theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(4, 0, 4),\r\n  },\r\n  form1: {\r\n    width: \"100%\",\r\n  },\r\n  date: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\nfunction EditProfile() {\r\n  const history = useHistory();\r\n  const [loading,setLoading] = useState(false)\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [currentUser, setCurrentUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    date_of_birth: \"\",\r\n    nickname: \"\",\r\n    gender: \"\",\r\n    profile_picture: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (user[0] !== undefined) {\r\n      setCurrentUser({\r\n        first_name: user[0].first_name,\r\n        last_name: user[0].last_name,\r\n        email: user[0].email,\r\n        date_of_birth:\r\n          user[0].date_of_birth === null ? \"\" : user[0].date_of_birth,\r\n        nickname: user[0].nickname === null ? \"\" : user[0].nickname,\r\n        gender: user[0].gender === null ? \"--\" : user[0].gender,\r\n        profile_picture: \"\",\r\n      });\r\n    }\r\n  }, [user]);\r\n  const handleChange = (e) => {\r\n    setCurrentUser({ ...currentUser, [e.target.name]: e.target.value });\r\n  };\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n    const formData = new FormData();\r\n    formData.append(\"first_name\", currentUser.first_name);\r\n    formData.append(\"last_name\", currentUser.last_name);\r\n    formData.append(\"email\", currentUser.email);\r\n    formData.append(\"date_of_birth\", currentUser.date_of_birth);\r\n    formData.append(\"nickname\", currentUser.nickname);\r\n    formData.append(\"gender\", currentUser.gender);\r\n    formData.append(\"profile_picture\", currentUser.profile_picture);\r\n    updateUser(formData).then((data) => {\r\n      dispatch({\r\n        type: \"ADDUSER\",\r\n        data: data.data,\r\n      });\r\n      setLoading(false)\r\n      history.push(\"/profile\");\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const signUpForm = (e) => {\r\n    return (\r\n      <Container\r\n        component=\"main\"\r\n        maxWidth=\"sm\"\r\n        style={{ backgroundColor: \"#E0E0E0\" }}\r\n        className=\"rounded border mt-3 mb-5\"\r\n      >\r\n        {loading&&<Loading />}\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <h2 className=\"dataset__text rounded px-3 mt-2\">\r\n            <span\r\n              className=\"text-dark\"\r\n              style={{ fontSize: window.screen.width < 640 ? \"25px\" : \"30px\" }}\r\n            >\r\n              {\" \"}\r\n              Edit Profile{\" \"}\r\n            </span>\r\n          </h2>\r\n          <form className={classes.form} onSubmit={submit} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"first_name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={currentUser.first_name}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  size={'small'}\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={currentUser.last_name}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  size={'small'}\r\n\r\n                  name=\"last_name\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <span className=\"dataset__text px-2\">\r\n                  {\" \"}\r\n                  <b className=\"text-dark\"> Photo:</b>{\" \"}\r\n                </span>\r\n                <input\r\n                  className=\"btn\"\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    setCurrentUser({\r\n                      ...currentUser,\r\n                      profile_picture: e.target.files[0],\r\n                    })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  disabled={true}\r\n                  name=\"email\"\r\n                  size={'small'}\r\n\r\n                  autoComplete=\"email\"\r\n                  value={currentUser.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"nickName\"\r\n                  value={currentUser.nickname}\r\n                  onChange={handleChange}\r\n                  size={'small'}\r\n\r\n                  label=\"Nick Name\"\r\n                  name=\"nickname\"\r\n                  autoComplete=\"nName\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  className={classes.date}\r\n                  required\r\n                  name=\"date_of_birth\"\r\n                  value={currentUser.date_of_birth}\r\n                  onChange={handleChange}\r\n                  variant=\"outlined\"\r\n                  id=\"date\"\r\n                  label=\"DATE OF BIRTH\"\r\n                  type=\"date\"\r\n                  size={'small'}\r\n\r\n                  // defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <div className=\"\">\r\n                  <span className=\"dataset__text px-2\">\r\n                    <b className=\"text-dark\"> Gender:</b>\r\n                  </span>\r\n                  <div className=\"radio form-check p-2 ml-4\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      onChange={handleChange}\r\n                      value=\"M\"\r\n                      id=\"m\"\r\n                      className=\"form-check-input\"\r\n                      checked={currentUser.gender === \"M\"}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"m\">\r\n                      {\" \"}\r\n                      Male\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"radio form-check p-2 ml-4\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"F\"\r\n                      id=\"f\"\r\n                      name=\"gender\"\r\n                      className=\"form-check-input\"\r\n                      checked={currentUser.gender === \"F\"}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"f\">\r\n                      {\" \"}\r\n                      Female\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={currentUser.date_of_birth === \"\" ? true : false}\r\n              className={classes.submit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  };\r\n  return <div className=\"px-3\">{signUpForm()}</div>;\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Author\\Profile.jsx",["191"],"import React, { useEffect, useState } from \"react\";\r\nimport { getauthor } from \"../../services/Api\";\r\nimport RSkeleton from \"../RSkeleton\";\r\n\r\nfunction Profile(props) {\r\n  const [author, setAuthor] = useState([]);\r\n  useEffect(() => {\r\n    const {\r\n      match: { params },\r\n    } = props;\r\n    let mounted = true;\r\n    getauthor(params.id).then((items) => {\r\n      if (mounted) {\r\n        setAuthor(items.data);\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container mb-5 mt-5\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mt-5 mb-3\">\r\n            <div className=\"d-flex flex-column align-items-center text-center\">\r\n              <img\r\n                src=  {author?\r\n                author.photo != null\r\n                  ? author.photo\r\n                  : \"/assets/defaultimage.png\"\r\n                : \"\"}\r\n                alt=\"name\"\r\n                className=\"rounded-circle profilePicture\"\r\n              />\r\n              <div className=\"mt-3\">\r\n                <h4 className=\"author__heading px-2 py-1\">\r\n                  {author ? author.first_name&&author.first_name.toUpperCase() : ''}{\" \"}\r\n                  {author ? author.last_name&&author.last_name.toUpperCase() : ''}{\" \"}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8 mt-4 rounded\" >\r\n            <div className=\"card mb-3 text-light \" style={{backgroundColor:'#443F39'}}>\r\n              <div className=\"card-body\" style={{backgroundColor:'#443F39'}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">First Name</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.first_name ? author.first_name : <RSkeleton />}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">Last Name</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.last_name ? author.last_name : <RSkeleton />}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">Alias</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6 \">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.alias ? author.alias : <RSkeleton />}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">Bio</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.bio ? (author.bio):<RSkeleton />}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">Attributes</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6 \">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.attribute ? author.attribute.map((v,i)=>{\r\n                        return <span key={i} className='m-0 p-0' style={{display:window.screen.width<600&&'block'}}>{v}<b>, </b></span>\r\n                      }):<RSkeleton />}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">Gender</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6 \">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.sex\r\n                        ? (author.sex === \"M\" && \"Male\") ||\r\n                          (author.sex === \"F\" && \"Female\")\r\n                        : <RSkeleton />}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-6\">\r\n                    <h6 className=\"mb-0\">Date of Birth</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-8 col-6\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.date_of_birth ? author.date_of_birth : <RSkeleton />}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\CreateDataset.js",["192","193","194"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createdataset,\r\n  datasetListFunc,\r\n  updatedataset,\r\n} from \"../../services/Api\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport Params from \"./Params\";\r\nimport { LinearProgress, TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./style.css\";\r\nimport Loading from \"../Loading\";\r\nfunction CreateDataset(props) {\r\n  const history = useHistory();\r\n  const [, dispatch] = useStateValue();\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setparams] = useState({\r\n    attributes: \"\",\r\n    gender: \"\",\r\n    morality: \"\",\r\n    size: 0,\r\n    name: \"\",\r\n    type_dataset: \"parameter\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setparams({ ...params, [e[0].name]: e[0].value });\r\n  };\r\n\r\n  const onSelect = (e) => {\r\n    let attributes = [];\r\n    e.map((v) => attributes.push(v.name));\r\n\r\n    var unique = attributes.filter(onlyUnique);\r\n    setparams({ ...params, attributes: unique });\r\n  };\r\n  const onRemove = (e) => {\r\n    let attributes = [];\r\n    e.map((v) => {\r\n      attributes.push(v.name);\r\n    });\r\n\r\n    setparams({ ...params, attributes: attributes });\r\n  };\r\n  const onlyUnique = (value, index, self) => {\r\n    return self.indexOf(value) === index;\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (\r\n      params.attributes == [] ||\r\n      params.gender === \"\" ||\r\n      params.morality === \"\" ||\r\n      params.size === 0\r\n    ) {\r\n      alert(\"Please Select Parameters!\");\r\n      setLoading(false);\r\n    } else if (params.name === \"\") {\r\n      alert(\"Please Type Dataset Name\");\r\n      setLoading(false);\r\n    } else {\r\n      if (props.create === true) {\r\n        createdataset(JSON.stringify(params)).then((data) => {\r\n          datasetListFunc().then((items) => {\r\n            dispatch({\r\n              type: \"ADDDATASET\",\r\n              data: items.data,\r\n            });\r\n            setLoading(false);\r\n          });\r\n          props.handleClose();\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"ADDCURRENTDATASET\",\r\n          data: params,\r\n        });\r\n        updatedataset(JSON.stringify(params), props.id).then((data) => {\r\n          datasetListFunc().then((items) => {\r\n            dispatch({\r\n              type: \"ADDDATASET\",\r\n              data: items.data,\r\n            });\r\n            setLoading(false)\r\n          })\r\n          props.handleClose();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Params\r\n        submit={onSubmit}\r\n        handleChange={handleChange}\r\n        onSelect={onSelect}\r\n        onRemove={onRemove}\r\n      />\r\n      <div className=\"px-3 w-100 text-center\">\r\n        <button\r\n          className=\"btn btn-light my-2 w-100\"\r\n          onClick={() =>\r\n            props.create\r\n              ? history.push(\"/manual\")\r\n              : history.push(`/dataseteditmanual/${props.id}`)\r\n          }\r\n        >\r\n          Advance Selection\r\n        </button>\r\n      </div>\r\n      <div className=\"px-3\">\r\n        <TextField\r\n          autoComplete=\"Dname\"\r\n          name=\"name\"\r\n          variant=\"outlined\"\r\n          required\r\n          // className='px-2 py-1'\r\n          value={params.name}\r\n          onChange={(e) => setparams({ ...params, name: e.target.value })}\r\n          fullWidth\r\n          label=\"Dataset Name\"\r\n          autoFocus\r\n        />\r\n        {loading&&<LinearProgress />}\r\n        <div className=\"\">\r\n          <Button\r\n            onClick={onSubmit}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={props.classes.submit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDataset;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\Facebook.js",["195"],"import React, { useState } from \"react\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { authenticate, datasetListFunc } from \"../../services/Api\";\r\nimport { facebookLogin } from \"../../services/user/userApi\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport './sociallogin.css'\r\nfunction Facebook() {\r\n  const [,dispatch] = useStateValue()\r\n  const responseFacebook = (response) => {\r\n    const { name, email, accessToken } = response;\r\n    const first_name = name.split(\" \")[0];\r\n    const last_name = name.split(\" \")[1];\r\n    const data = {\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      email: email,\r\n      facebook_token: accessToken,\r\n    };\r\n    facebookLogin(data).then(data=>{\r\n      authenticate(data.data.token, () => {\r\n          dispatch({\r\n            type: \"ADDUSER\",\r\n            data: data.data,\r\n          });\r\n        });\r\n        datasetListFunc().then((items) => {\r\n          dispatch({\r\n            type: \"ADDDATASET\",\r\n            data: items.data,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n   <FacebookLogin\r\n          appId=\"427757665031934\"\r\n          autoLoad={false}\r\n          fields=\"name,email,picture\"\r\n          callback={responseFacebook}\r\n          cssClass='facebook'\r\n          // icon={\"fa fa-facebook\"}\r\n        />\r\n    </>\r\n  );\r\n}\r\nexport default Facebook;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\Google.js",["196","197"],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\Loading.jsx",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\AuthorsList.jsx",["198","199","200"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RSkeleton from \"../RSkeleton\";\r\nimport \"./dataset.css\";\r\nfunction AuthorsList(props) {\r\n  const { foundedValue } = props;\r\n  const history = useHistory()\r\n  return (\r\n    <div >\r\n      <h2 className=\"px-3 pb-2 w-100 text-center\"> <span className='px-4 py-1 rounded author__heading'>Authors</span></h2>\r\n      <div  style={{ \r\n      height: '500px', \r\n      overflowX: 'hidden',\r\n      overflowY: 'auto' }}>\r\n      <table className=\"table table-hover table-dark rounded\">\r\n        <thead className=\"thead text-light\" style={{backgroundColor:'#443F39'}}>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Sex</th>\r\n            <th scope=\"col\">Date Of Birth</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {foundedValue.author ?\r\n            foundedValue.author.map((v, i) => {\r\n              return (\r\n                <tr\r\n                  onClick={() => history.push(`/authorprofile/${v.id}`)}\r\n                  key={i}\r\n                  style={{ cursor: \"pointer\", fontFamily: \"monospace\",fontSize:window.screen.width<600?'0.8rem':'1.2rem',fontWeight:1000 }}\r\n                >\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{v.first_name}</td>\r\n                  <td>{v.last_name}</td>\r\n                  <td>{(v.sex==='M'&&'Male')||(v.sex==='F'&&'Female')}</td>\r\n                  <td>{v.date_of_birth}</td>\r\n                </tr>\r\n              );\r\n            }):\r\n            <>\r\n             <tr>\r\n                <td scope=\"row\">\r\n                  <RSkeleton width={window.screen.width<600?30:70} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td className=\"pl-4\">\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td scope=\"row\">\r\n                  <RSkeleton width={window.screen.width<600?30:70} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td className=\"pl-4\">\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td scope=\"row\">\r\n                  <RSkeleton width={window.screen.width<600?30:70} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100}/>\r\n                </td>\r\n                <td className=\"pl-4\">\r\n                  <RSkeleton width={window.screen.width<600?30:100} />\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100}/>\r\n                </td>\r\n                <td>\r\n                  <RSkeleton width={window.screen.width<600?30:100}/>\r\n                </td>\r\n              </tr>\r\n            </>}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorsList;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\dataset\\Params.js",["201","202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport { listAttributes } from \"../../services/Api\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nfunction Params(props) {\r\n  \r\n  const [{attributes},] = useStateValue()\r\n\r\n  const { handleChange, onSelect, onRemove } = props;\r\n  const gender = [\r\n    { value: \"M\", id: 1, name: \"gender\", display: \"Male\" },\r\n    { value: \"F\", id: 2, name: \"gender\", display: \"Female\" },\r\n    { value: \"All\", id: 3, name: \"gender\", display: \"All\" },\r\n  ];\r\n  const morality = [\r\n    { value: \"Living\", id: 1, name: \"morality\" },\r\n    { value: \"Deceased\", id: 2, name: \"morality\" },\r\n    { value: \"All\", id: 3, name: \"morality\" },\r\n  ];\r\n  const size = [\r\n    { value: \"25\", id: 1, name: \"size\" },\r\n    { value: \"50\", id: 2, name: \"size\" },\r\n    { value: \"100\", id: 3, name: \"size\" },\r\n    { value: \"150\", id: 4, name: \"size\" },\r\n    { value: \"200\", id: 5, name: \"size\" },\r\n    { value: \"All\", id: 6, name: \"size\" },\r\n  ];\r\n  const style = {\r\n    searchBox: {\r\n      fontSize: \"14px\",\r\n      minHeight: \"40px\",\r\n    },\r\n  };\r\n\r\n  const parameterForm = () => {\r\n    return (\r\n      <form>\r\n        <div className=\"\">\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Attributes: </h5>\r\n            <Multiselect\r\n              options={attributes&&attributes}\r\n              displayValue=\"name\"\r\n              onSelect={onSelect}\r\n              showCheckbox={true}\r\n              style={style}\r\n              onRemove={onRemove}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Gender: </h5>\r\n\r\n            <Multiselect\r\n              style={style}\r\n              options={gender}\r\n              displayValue=\"display\"\r\n              onSelect={handleChange}\r\n              id='input__gender'\r\n              singleSelect\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Mortality: </h5>\r\n            <Multiselect\r\n              options={morality}\r\n              style={style}\r\n              displayValue=\"value\"\r\n              id='input__gender'\r\n              onSelect={handleChange}\r\n              singleSelect\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Size: </h5>\r\n            <Multiselect\r\n              options={size}\r\n              placeholder='Size'\r\n              style={style}\r\n              displayValue=\"value\"\r\n              id='input__gender'\r\n              onSelect={handleChange}\r\n              singleSelect\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n  return <>{parameterForm()}</>;\r\n}\r\n\r\nexport default Params;\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\EmailActivation404.jsx",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\user\\EmailActivation.jsx",["204","205","206"],"import React,{useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { useStateValue } from '../../StateProvider'\r\nfunction EmailActivation() {\r\n    return (\r\n        <div className='jumbotron container p-3 mt-4 text-center'>\r\n            Your Email is Verfied, Please Login Now. <Link to='/signin' >Sign In</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailActivation\r\n","C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\RSkeleton.js",[],"C:\\Users\\afnan\\OneDrive\\Desktop\\Projects\\quotes-frontend\\newapp\\src\\components\\footer\\MobileFooter.js",["207"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    backgroundColor: \"#443F39\",\r\n  },\r\n});\r\n\r\nexport default function MobileFooter() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const history = useHistory();\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        label=\"Home\"\r\n        onClick={() => history.push(\"/\")}\r\n        className=\"text-light\"\r\n        icon={<DashboardIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Profile\"\r\n        onClick={() => history.push(\"/profile\")}\r\n        className=\"text-white\"\r\n        icon={<AccountCircle />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Datasets\"\r\n        onClick={() => history.push(\"/dataset\")}\r\n        className=\"text-white\"\r\n        icon={<ListIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n",{"ruleId":"208","severity":1,"message":"209","line":10,"column":8,"nodeType":"210","messageId":"211","endLine":10,"endColumn":14},{"ruleId":"208","severity":1,"message":"212","line":11,"column":8,"nodeType":"210","messageId":"211","endLine":11,"endColumn":17},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"208","severity":1,"message":"217","line":6,"column":8,"nodeType":"210","messageId":"211","endLine":6,"endColumn":11},{"ruleId":"208","severity":1,"message":"218","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":12},{"ruleId":"208","severity":1,"message":"219","line":14,"column":8,"nodeType":"210","messageId":"211","endLine":14,"endColumn":17},{"ruleId":"208","severity":1,"message":"220","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":12},{"ruleId":"208","severity":1,"message":"221","line":16,"column":8,"nodeType":"210","messageId":"211","endLine":16,"endColumn":13},{"ruleId":"208","severity":1,"message":"222","line":27,"column":10,"nodeType":"210","messageId":"211","endLine":27,"endColumn":19},{"ruleId":"208","severity":1,"message":"223","line":130,"column":9,"nodeType":"210","messageId":"211","endLine":130,"endColumn":25},{"ruleId":"208","severity":1,"message":"224","line":2,"column":25,"nodeType":"210","messageId":"211","endLine":2,"endColumn":35},{"ruleId":"208","severity":1,"message":"225","line":19,"column":22,"nodeType":"210","messageId":"211","endLine":19,"endColumn":30},{"ruleId":"226","severity":1,"message":"227","line":68,"column":6,"nodeType":"228","endLine":68,"endColumn":19,"suggestions":"229"},{"ruleId":"208","severity":1,"message":"230","line":134,"column":9,"nodeType":"210","messageId":"211","endLine":134,"endColumn":14},{"ruleId":"208","severity":1,"message":"231","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"208","severity":1,"message":"217","line":14,"column":8,"nodeType":"210","messageId":"211","endLine":14,"endColumn":11},{"ruleId":"208","severity":1,"message":"232","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":24},{"ruleId":"208","severity":1,"message":"233","line":29,"column":10,"nodeType":"210","messageId":"211","endLine":29,"endColumn":17},{"ruleId":"208","severity":1,"message":"234","line":30,"column":10,"nodeType":"210","messageId":"211","endLine":30,"endColumn":15},{"ruleId":"208","severity":1,"message":"222","line":33,"column":10,"nodeType":"210","messageId":"211","endLine":33,"endColumn":19},{"ruleId":"208","severity":1,"message":"235","line":2,"column":27,"nodeType":"210","messageId":"211","endLine":2,"endColumn":37},{"ruleId":"208","severity":1,"message":"236","line":2,"column":39,"nodeType":"210","messageId":"211","endLine":2,"endColumn":48},{"ruleId":"208","severity":1,"message":"237","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"238","line":7,"column":8,"nodeType":"210","messageId":"211","endLine":7,"endColumn":13},{"ruleId":"208","severity":1,"message":"239","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":17},{"ruleId":"208","severity":1,"message":"240","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":17},{"ruleId":"208","severity":1,"message":"241","line":10,"column":8,"nodeType":"210","messageId":"211","endLine":10,"endColumn":17},{"ruleId":"208","severity":1,"message":"242","line":11,"column":8,"nodeType":"210","messageId":"211","endLine":11,"endColumn":16},{"ruleId":"208","severity":1,"message":"243","line":13,"column":10,"nodeType":"210","messageId":"211","endLine":13,"endColumn":24},{"ruleId":"208","severity":1,"message":"244","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":16},{"ruleId":"226","severity":1,"message":"245","line":46,"column":6,"nodeType":"228","endLine":46,"endColumn":8,"suggestions":"246"},{"ruleId":"208","severity":1,"message":"244","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":29,"column":23,"nodeType":"249","endLine":29,"endColumn":34},{"ruleId":"247","severity":1,"message":"248","line":40,"column":21,"nodeType":"249","endLine":40,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":54,"column":21,"nodeType":"249","endLine":54,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":68,"column":21,"nodeType":"249","endLine":68,"endColumn":32},{"ruleId":"208","severity":1,"message":"243","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"250","line":31,"column":6,"nodeType":"228","endLine":31,"endColumn":22,"suggestions":"251"},{"ruleId":"226","severity":1,"message":"250","line":23,"column":6,"nodeType":"228","endLine":23,"endColumn":8,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":39,"column":52,"nodeType":"255","messageId":"256","endLine":39,"endColumn":54},{"ruleId":"208","severity":1,"message":"231","line":3,"column":3,"nodeType":"210","messageId":"211","endLine":3,"endColumn":9},{"ruleId":"208","severity":1,"message":"257","line":7,"column":3,"nodeType":"210","messageId":"211","endLine":7,"endColumn":19},{"ruleId":"208","severity":1,"message":"258","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":11},{"ruleId":"208","severity":1,"message":"217","line":11,"column":3,"nodeType":"210","messageId":"211","endLine":11,"endColumn":6},{"ruleId":"208","severity":1,"message":"259","line":12,"column":3,"nodeType":"210","messageId":"211","endLine":12,"endColumn":13},{"ruleId":"208","severity":1,"message":"232","line":16,"column":8,"nodeType":"210","messageId":"211","endLine":16,"endColumn":24},{"ruleId":"208","severity":1,"message":"260","line":17,"column":10,"nodeType":"210","messageId":"211","endLine":17,"endColumn":14},{"ruleId":"226","severity":1,"message":"261","line":18,"column":6,"nodeType":"228","endLine":18,"endColumn":8,"suggestions":"262"},{"ruleId":"208","severity":1,"message":"263","line":14,"column":8,"nodeType":"210","messageId":"211","endLine":14,"endColumn":15},{"ruleId":"264","severity":1,"message":"265","line":41,"column":15,"nodeType":"266","messageId":"267","endLine":41,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":54,"column":25,"nodeType":"255","messageId":"256","endLine":54,"endColumn":27},{"ruleId":"208","severity":1,"message":"237","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":22,"column":24,"nodeType":"255","messageId":"256","endLine":22,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":23,"column":26,"nodeType":"255","messageId":"256","endLine":23,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":44,"column":21,"nodeType":"249","endLine":44,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":61,"column":21,"nodeType":"249","endLine":61,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":78,"column":21,"nodeType":"249","endLine":78,"endColumn":32},{"ruleId":"208","severity":1,"message":"237","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"236","line":1,"column":27,"nodeType":"210","messageId":"211","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"268","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":24},{"ruleId":"208","severity":1,"message":"236","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":24},{"ruleId":"208","severity":1,"message":"224","line":2,"column":15,"nodeType":"210","messageId":"211","endLine":2,"endColumn":25},{"ruleId":"208","severity":1,"message":"269","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":23},{"ruleId":"208","severity":1,"message":"270","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":22},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","no-native-reassign",["271"],"no-negated-in-lhs",["272"],"'Box' is defined but never used.","'List' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Copyright' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'useHistory' is defined but never used.","'useTheme' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["273"],"'theme' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'getUser' is defined but never used.","'green' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'LinearProgress' is defined but never used.","'Skeleton' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'qod.length'. Either include them or remove the dependency array.",["274"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["275"],["276"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["277"],"'Loading' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'listAttributes' is defined but never used.","'useStateValue' is defined but never used.","'LocationOnIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [datasetList, dispatch]",{"range":"288","text":"289"},"Update the dependencies array to be: [dispatch, qod.length]",{"range":"290","text":"291"},"Update the dependencies array to be: [currentDataset, params.id]",{"range":"292","text":"293"},"Update the dependencies array to be: [params.id]",{"range":"294","text":"295"},"Update the dependencies array to be: [props]",{"range":"296","text":"297"},[2296,2309],"[datasetList, dispatch]",[1430,1432],"[dispatch, qod.length]",[972,988],"[currentDataset, params.id]",[659,661],"[params.id]",[474,476],"[props]"]
[{"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\index.js":"1","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\reducer.js":"2","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\StateProvider.js":"3","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\Dummy.js":"4","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\App.js":"5","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Header.js":"6","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\SignIn.js":"7","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\SignUp.js":"8","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\PrivateRoutes.js":"9","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\CreateDatasetModal.js":"10","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\services\\Api.js":"11","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\footer\\Footer.js":"12","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Home.js":"13","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\services\\user\\userApi.js":"14","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\ListDataset.jsx":"15","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\Manual.jsx":"16","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\DatasetDetails.jsx":"17","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\DiscussionMode.jsx":"18","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\EditProfile.jsx":"19","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Author\\Profile.jsx":"20","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\Profile.jsx":"21","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\Google.js":"22","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\Facebook.js":"23","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\CreateDataset.js":"24","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Loading.jsx":"25","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\AuthorsList.jsx":"26","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\Params.js":"27"},{"size":686,"mtime":1611777409991,"results":"28","hashOfConfig":"29"},{"size":544,"mtime":1611688771371,"results":"30","hashOfConfig":"29"},{"size":487,"mtime":1612190469083,"results":"31","hashOfConfig":"29"},{"size":5507,"mtime":1611776273568,"results":"32","hashOfConfig":"29"},{"size":3654,"mtime":1612464347558,"results":"33","hashOfConfig":"29"},{"size":13265,"mtime":1612465212570,"results":"34","hashOfConfig":"29"},{"size":6741,"mtime":1612209372859,"results":"35","hashOfConfig":"29"},{"size":9278,"mtime":1612209372859,"results":"36","hashOfConfig":"29"},{"size":572,"mtime":1612190469082,"results":"37","hashOfConfig":"29"},{"size":1780,"mtime":1612209372861,"results":"38","hashOfConfig":"29"},{"size":3433,"mtime":1612190469097,"results":"39","hashOfConfig":"29"},{"size":1512,"mtime":1612464671570,"results":"40","hashOfConfig":"29"},{"size":4727,"mtime":1612464096231,"results":"41","hashOfConfig":"29"},{"size":1035,"mtime":1612190469097,"results":"42","hashOfConfig":"29"},{"size":1464,"mtime":1612209372864,"results":"43","hashOfConfig":"29"},{"size":3525,"mtime":1612190469091,"results":"44","hashOfConfig":"29"},{"size":3744,"mtime":1612209372862,"results":"45","hashOfConfig":"29"},{"size":7879,"mtime":1612457102273,"results":"46","hashOfConfig":"29"},{"size":8023,"mtime":1612209372866,"results":"47","hashOfConfig":"29"},{"size":5242,"mtime":1612190469083,"results":"48","hashOfConfig":"29"},{"size":3709,"mtime":1612457102278,"results":"49","hashOfConfig":"29"},{"size":1639,"mtime":1612190469095,"results":"50","hashOfConfig":"29"},{"size":1372,"mtime":1611417226653,"results":"51","hashOfConfig":"29"},{"size":3330,"mtime":1612209372861,"results":"52","hashOfConfig":"29"},{"size":236,"mtime":1612190469084,"results":"53","hashOfConfig":"29"},{"size":1444,"mtime":1612209372860,"results":"54","hashOfConfig":"29"},{"size":2768,"mtime":1612209372864,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"8rzxkb",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"59"},"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\index.js",["123","124"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n// import SignIn from \"./components/SignIn\";\r\nimport App from \"./App\";\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import \"font-awesome/css/font-awesome.min.css\";\r\nimport reducer, { initialState } from \"./reducer\";\r\nimport { StateProvider } from \"./StateProvider\";\r\nimport Header from \"./components/Header\";\r\nimport Dashboard from \"./components/dataset/Dummy\";\r\n\r\nReactDOM.render(\r\n  <StateProvider initialState={initialState} reducer={reducer}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StateProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["125","126"],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\reducer.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\StateProvider.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\Dummy.js",["127","128","129","130","131","132","133"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n// import { mainListItems, secondaryListItems } from \"./listItems\";\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\nimport App from \"./../../App\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {/* <List>{mainListItems}</List> */}\r\n        <Divider />\r\n        {/* <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <App />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\App.js",["134","135"],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Header.js",["136"],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\SignIn.js",["137","138"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {\r\n  FacebookLoginButton,\r\n  GoogleLoginButton,\r\n} from \"react-social-login-buttons\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Facebook from \"./user/Facebook\";\r\nimport Google from \"./user/Google\";\r\nimport {\r\n  signIn,\r\n  authenticate,\r\n  isAuthenticated,\r\n  datasetListFunc,\r\n} from \"../services/Api\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { getUser } from \"../services/user/userApi\";\r\nimport { green, purple } from \"@material-ui/core/colors\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link to=\"/\" color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    \"&:hover\": {\r\n      backgroundColor: \"#263238\",\r\n    },\r\n  },\r\n}))(Button);\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0.5, 0.1),\r\n    width: \"98%\",\r\n    height: \"50px\",\r\n    fontSize: \"19px\",\r\n    textTransform: \"capitalize\",\r\n    backgroundColor: \"#455a64\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const [, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const [loading, setloading] = useState(false);\r\n  const [userData, setuserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    Email: false,\r\n    Password: false,\r\n  });\r\n  const handleChange = (e) => {\r\n    setuserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setloading(true);\r\n    signIn(JSON.stringify(userData))\r\n      .then((data) => {\r\n        if (data.status === \"Failure\") {\r\n          if (data.message === \"Password\") {\r\n            setErrors({ ...errors, Email: false, Password: true });\r\n          } else if (data.message === \"Email\") {\r\n            setErrors({ ...errors, Email: true, Password: false });\r\n          }\r\n          setloading(false);\r\n        } else if (data.data.token) {\r\n          setloading(false);\r\n          authenticate(data.data.token, () => {\r\n            setuserData({ email: \"\", password: \"\" });\r\n            // getUser().then((data) => {\r\n              dispatch({\r\n                type: \"ADDUSER\",\r\n                data: data.data.data,\r\n              });\r\n            // });\r\n            datasetListFunc(data.data.id).then((items) => {\r\n              dispatch({\r\n                type: \"ADDDATASET\",\r\n                data: items.data,\r\n              });\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const performRedirect = () => {\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  return (\r\n    <>{\r\n      loading&& <Loading />\r\n    }\r\n      <Container component=\"main\" maxWidth=\"xs\" className='bg-white border mt-3'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <h2 className='dataset__text rounded px-3 mt-2' >\r\n           <span style={{fontSize:window.screen.width<640&&'25px'}}> Sign In </span>\r\n          </h2>\r\n          <form className={classes.form} onSubmit={submit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleChange}\r\n              value={userData.email}\r\n              helperText={errors.Email && \"Invalid Email\"}\r\n              error={errors.Email}\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              value={userData.Password}\r\n              helperText={errors.Password && \"Invalid Password\"}\r\n              error={errors.Password}\r\n              required\r\n              fullWidth\r\n              onChange={handleChange}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <ColorButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </ColorButton>\r\n\r\n            <FacebookLoginButton className=\"pl-2 facebook-login pr-0 mt-2\">\r\n              <Facebook />\r\n            </FacebookLoginButton>\r\n            <GoogleLoginButton className=\"google-login pr-0 mt-2\">\r\n              <Google />\r\n            </GoogleLoginButton>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n        {performRedirect()}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\SignUp.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\PrivateRoutes.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\CreateDatasetModal.js",["139","140"],"import Modal from \"react-modal\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CreateDataset from \"./CreateDataset\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    \r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -45%)\",\r\n    width: window.screen.width < 700 ? \"80%\" : \"40%\",\r\n  },\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nModal.setAppElement(\"#root\");\r\nfunction CreateDatasetModal(props) {\r\n  const classes = useStyles();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn btn-secondary mr-3 col-xs-12 col-sm-12 col-md-2 mb-2\"\r\n        onClick={handleOpenModal}\r\n      >\r\n        {props.create ? \"Add Dataset\" : \"Update Dataset\"}\r\n      </button>\r\n      <Modal\r\n        isOpen={showModal}\r\n        contentLabel=\"onRequestClose Example\"\r\n        onRequestClose={handleCloseModal}\r\n        style={customStyles}\r\n      >\r\n        <h4>{props.create ? \"Create Dataset\" : \"Update Dataset\"}</h4>\r\n        <CreateDataset create={props.create} id={props.id} classes={classes} />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default CreateDatasetModal;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\services\\Api.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\footer\\Footer.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Home.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\services\\user\\userApi.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\ListDataset.jsx",["141"],"import { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport CreateDatasetModal from \"./CreateDatasetModal\";\r\nfunction ListDataset(props) {\r\n  const [{ datasetList }] = useStateValue();\r\n  const history = useHistory();\r\n  return (\r\n    <div className='bg-white px-2 py-1 mt-4 border'>\r\n      <table className=\"table table-hover mt-3\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Dataset Name</th>\r\n            <th scope=\"col\"> Authors </th>\r\n            <th scope=\"col\">Created At</th>\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {datasetList.length > 0\r\n            ? datasetList[0].map((v, i) => {\r\n                return (\r\n                  <tr\r\n                    onClick={() => history.push(`/dataset/detail/${v.id}`)}\r\n                    key={i}\r\n                    style={{ cursor: \"pointer\",fontFamily:'cursive' }}\r\n                  >\r\n                    <td scope=\"row\">{i + 1}</td>\r\n                    <td>{v.dataset_name}</td>\r\n                    <td className=\"pl-4\">{v.author.length}</td>\r\n                    <td>{v.created_at.split(\":\")[0].split(\"T\")[0]}</td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n      <CreateDatasetModal create={props.create} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListDataset;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\Manual.jsx",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\DatasetDetails.jsx",["142"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  deleteDatasetFunc,\r\n  getDataSet,\r\n  datasetListFunc,\r\n} from \"../../services/Api\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport AuthorsList from \"./AuthorsList\";\r\nimport CreateDatasetModal from \"./CreateDatasetModal\";\r\nfunction DatasetDetails(props) {\r\n  const history = useHistory();\r\n  const [{ currentDataset }, dispatch] = useStateValue();\r\n\r\n  const [foundedValue, setfoundedValue] = useState([]);\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n  useEffect(() => {\r\n   \r\n    let mounted = true;\r\n    getDataSet(params.id).then((items) => {\r\n      if (mounted) {\r\n        setfoundedValue(items.data);\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  },[currentDataset]);\r\n\r\n  const deleteDataset = (e) => {\r\n    deleteDatasetFunc(foundedValue.id).then((data) => {\r\n      if (data.status === true) {\r\n        datasetListFunc().then((items) => {\r\n          dispatch({\r\n            type: \"ADDDATASET\",\r\n            data: items.data,\r\n          });\r\n        });\r\n        history.push(\"/dataset\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mb-5 container\">\r\n      {foundedValue && (\r\n        <>\r\n          <div className=\"jumbotron pt-3 mt-3 border\">\r\n            <h1 className=\"text-center\">\r\n              {\" \"}\r\n              <span className=\"pt-1 px-4 pb-1 dataset__heading rounded mb-2\">Dataset Details</span>\r\n            </h1>\r\n\r\n            <div className=\"dataset__detail rounded border\">\r\n              <div className=\"col-sm-6 col-md-3\">\r\n                <p className=\"lead mt-3\">\r\n                  {\" \"}\r\n                  <b className='dataset__text'>Dataset Name: </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>Dataset Type : </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>Authors : </b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>Created At : </b>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-sm-6 mt-3 col-md-5\">\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>{foundedValue.dataset_name}</b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>{foundedValue.type_dataset}</b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>{foundedValue.author ? foundedValue.author.length : \"\"}</b>\r\n                </p>\r\n                <p className=\"lead\">\r\n                  <b className='dataset__text'>\r\n                    {foundedValue.created_at\r\n                      ? foundedValue.created_at.split(\":\")[0].split(\"T\")[0]\r\n                      : \"\"}\r\n                  </b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <hr className=\"my-4\" />\r\n            <button className=\"btn btn-secondary mr-3 col-xs-12 mb-2 col-sm-12 col-md-2\" onClick={deleteDataset}>\r\n              Delete Dataset\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary mr-3 col-xs-12 col-sm-12 col-md-2 mb-2\"\r\n              onClick={() =>\r\n                foundedValue &&\r\n                history.push(`/discussionmode/${foundedValue.id}`)\r\n              }\r\n            >\r\n              Disucssion Mode\r\n            </button>\r\n            <CreateDatasetModal id={foundedValue.id} create={false} />\r\n          </div>\r\n          <AuthorsList foundedValue={foundedValue} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatasetDetails;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\DiscussionMode.jsx",["143","144"],"import React, { useEffect, useState } from \"react\";\r\nimport { discussionmode } from \"../../services/Api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst DiscussionMode = (props) => {\r\n  const [values, setValues] = useState([]);\r\n  const history = useHistory();\r\n  let c = 1;\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    discussionmode(params.id).then((data) => {\r\n      if (mounted) {\r\n        setValues([...data.data]);\r\n        console.log(data);\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        id=\"carouselExampleControls\"\r\n        className=\"carousel slide \"\r\n        data-ride=\"carousel\"\r\n        data-interval={false}\r\n      >\r\n        <h4 className=\"text-center pt-4\">\r\n          {\" \"}\r\n          <span className=\"px-3 py-2 dataset__text\">Discussion Mode</span>\r\n        </h4>\r\n\r\n        <div className=\"carousel-inner container\">\r\n          {values\r\n            ? values.map((v, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className={`carousel-item mt-2 resp mb-4 bg-light ${\r\n                      c == 1 && \"active\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"container  mx-0 mb-5\">\r\n                      <div className=\"row gutters-sm\">\r\n                        <div className=\"col-md-4 mt-4 mb-3\">\r\n                          <div className=\"d-flex flex-column align-items-center text-center\">\r\n                            <img\r\n                              src={\"http://localhost:8000\" + v.author.photo}\r\n                              alt=\"name\"\r\n                              className=\"rounded-circle mt-3 profilePicture\"\r\n                              \r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-8 mt-3\">\r\n                          <div className=\"card mb-3\">\r\n                            <div className=\"card-body bg-white\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                  <h6 className=\"mb-0\"> Name</h6>\r\n                                </div>\r\n                                <div className=\"col-sm-9 text-secondary\">\r\n                                  {v.author.short_name}\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                  <h6 className=\"mb-0\">Alias</h6>\r\n                                </div>\r\n                                <div className=\"col-sm-9 text-secondary\">\r\n                                  {v.author.alias === null\r\n                                    ? \"None\"\r\n                                    : v.author.alias}\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                  <h6 className=\"mb-0\">Morality</h6>\r\n                                </div>\r\n                                <div className=\"col-sm-9 text-secondary\">\r\n                                  {v.author.date_of_birth !== null\r\n                                    ? \"Living\"\r\n                                    : \"Deceased\"}\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                  <h6 className=\"mb-0\">Attributes</h6>\r\n                                </div>\r\n                                <div className=\"col-sm-9 text-secondary\">\r\n                                  {v.author.attribute.length > 0\r\n                                    ? v.author.attribute.map((v, i) => {\r\n                                        return <span key={i}>{v}</span>;\r\n                                      })\r\n                                    : \"None\"}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <hr />\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                  <h6 className=\"mb-0\">Gender</h6>\r\n                                </div>\r\n                                <div className=\"col-sm-9 text-secondary\">\r\n                                  {(v.author.sex === \"M\" && \"Male\") ||\r\n                                    (v.author.sex === \"F\" && \"Female\")}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <hr />\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                  <h6 className=\"mb-0\">Date of Birth</h6>\r\n                                </div>\r\n                                <div className=\"col-sm-9 text-secondary\">\r\n                                  {v.author.date_of_birth}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <span className=\"d-none\"> {(c = c + 1)} </span>\r\n                    <div className=\"container \">\r\n                      <div className=\"row mt-10\">\r\n                        <blockquote className=\"quote-card\">\r\n                          <h6>{v.quote}</h6>\r\n                          <cite>{v.author.short_name}</cite>\r\n                        </blockquote>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div>\r\n                          <h4 className=\"w-100 pt-4 pl-4\">\r\n                            {\" \"}\r\n                            <b>Questions :</b>\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <ul className=\"list-group\">\r\n                        {v.questions.map((v, i) => {\r\n                          return (\r\n                            <li className=\"list-group-item\" key={i}>\r\n                              <b>{i + 1}.</b> {v.title}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                      <button\r\n                        onClick={() => history.goBack()}\r\n                        className=\"btn btn-secondary my-3\"\r\n                      >\r\n                        Back to Dataset\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselExampleControls\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon \"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only colors-control\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselExampleControls\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DiscussionMode;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\EditProfile.jsx",["145","146","147","148","149","150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  // Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { updateUser } from \"../../services/user/userApi\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: window.screen.width<640?theme.spacing(1):theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  form1: {\r\n    width: \"100%\",\r\n  },\r\n  date: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\nfunction EditProfile() {\r\n  const history = useHistory()\r\n  const [{ user,},dispatch] = useStateValue();\r\n  const [currentUser, setCurrentUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    date_of_birth: \"\",\r\n    nickname: \"\",\r\n    gender: \"\",\r\n    profile_picture:\"\"\r\n  });\r\n  useEffect(() => {\r\n    if (user[0] !== undefined) {\r\n      setCurrentUser({\r\n        first_name: user[0].first_name,\r\n        last_name: user[0].last_name,\r\n        email: user[0].email,\r\n        date_of_birth:\r\n          user[0].date_of_birth === null ? \"\" : user[0].date_of_birth,\r\n        nickname: user[0].nickname === null ? \"\" : user[0].nickname,\r\n        gender: user[0].gender === null ? \"--\" : user[0].gender,\r\n        profile_picture:\"\",\r\n\r\n      });\r\n    }\r\n  }, [user]);\r\n  const handleChange = (e) => {\r\n    setCurrentUser({ ...currentUser, [e.target.name]: e.target.value });\r\n  };\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData()\r\n    formData.append('first_name',currentUser.first_name)\r\n    formData.append('last_name',currentUser.last_name)\r\n    formData.append('email',currentUser.email)\r\n    formData.append('date_of_birth',currentUser.date_of_birth)\r\n    formData.append('nickname',currentUser.nickname)\r\n    formData.append('gender',currentUser.gender)\r\n    formData.append('profile_picture',currentUser.profile_picture)\r\n    updateUser(formData).then((data) => {\r\n      dispatch({\r\n        type:'ADDUSER',\r\n        data:data.data\r\n      })\r\n      history.push('/profile')\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const signUpForm = (e) => {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"sm\" className=\"bg-white border mt-3\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <h2 className='dataset__text rounded px-3 mt-2' >\r\n           <span style={{fontSize:window.screen.width<640&&'25px'}}> Edit Profile </span>\r\n          </h2>\r\n          <form className={classes.form} onSubmit={submit} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"first_name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={currentUser.first_name}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n             \r\n              \r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={currentUser.last_name}\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"last_name\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <span className='dataset__text px-2'> <b> Photo:</b> </span>\r\n              <input className='btn' type=\"file\" onChange={(e)=>setCurrentUser({...currentUser,profile_picture:e.target.files[0]})}/>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  disabled={true}\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={currentUser.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"nickName\"\r\n                  value={currentUser.nickname}\r\n                  onChange={handleChange}\r\n                  label=\"Nick Name\"\r\n                  name=\"nickname\"\r\n                  autoComplete=\"nName\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  className={classes.date}\r\n                  required\r\n                  name=\"date_of_birth\"\r\n                  value={currentUser.date_of_birth}\r\n                  onChange={handleChange}\r\n                  variant=\"outlined\"\r\n                  id=\"date\"\r\n                  label=\"DATE OF BIRTH\"\r\n                  type=\"date\"\r\n                  // defaultValue=\"2017-05-24\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <div className=\"\">\r\n                  <span className='dataset__text px-2'><b> Gender:</b></span>\r\n                  <div className=\"radio form-check p-2 ml-4\">\r\n                   \r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        onChange={handleChange}\r\n                        value=\"M\"\r\n                        id='m'\r\n                        className='form-check-input'\r\n                        checked={currentUser.gender === \"M\"}\r\n                      />\r\n                    <label className='form-check-label' htmlFor='m'> Male</label>\r\n                     \r\n                  \r\n                  </div>\r\n                  <div className=\"radio form-check p-2 ml-4\">\r\n                  \r\n                      <input\r\n                        type=\"radio\"\r\n                        value=\"F\"\r\n                        id='f'\r\n                        name=\"gender\"\r\n                        className='form-check-input'\r\n                        checked={currentUser.gender === \"F\"}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label className='form-check-label' htmlFor='f'> Female</label>\r\n                     \r\n                   \r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid> */}\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={currentUser.date_of_birth===\"\"?true:false}\r\n\r\n              className={classes.submit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  };\r\n  return <div className='px-3'>{signUpForm()}</div>;\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Author\\Profile.jsx",["152","153"],"import React, { useEffect, useState } from \"react\";\r\nimport { getauthor } from \"../../services/Api\";\r\n\r\nfunction Profile(props) {\r\n  const [author, setAuthor] = useState([]);\r\n  useEffect(() => {\r\n    const {\r\n      match: { params },\r\n    } = props;\r\n    let mounted = true;\r\n    getauthor(params.id).then((items) => {\r\n      if (mounted) {\r\n        setAuthor(items.data);\r\n      }\r\n    });\r\n    return () => (mounted = false);\r\n  }, []);\r\n  return (\r\n    <>\r\n    {console.log(author)}\r\n      <div className=\"container mb-5\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mt-5 mb-3\">\r\n            <div className=\"d-flex flex-column align-items-center text-center\">\r\n              <img\r\n                src={author ? author.photo : \"\"}\r\n                alt=\"name\"\r\n                className=\"rounded-circle profilePicture\"\r\n              />\r\n              <div className=\"mt-3\">\r\n                <h4 className=\"author__heading px-2 py-1\">\r\n                  {author ? author.first_name&&author.first_name.toUpperCase() : \"\"}{\" \"}\r\n                  {author ? author.last_name&&author.last_name.toUpperCase() : \"\"}{\" \"}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8 mt-3\">\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">First Name</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author ? author.first_name : \"\"}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">Last Name</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author ? author.last_name : \"\"}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">Alias</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author ? (author.alias==null&&'None')||(author.alias) : \"\"}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">Bio</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author ? (author.bio==\"\"&&'None')||(author.bio):''}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">Attributes</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author.attribute ? author.attribute.map((v,i)=>{\r\n                        return <span key={i} className='m-0 p-0' style={{display:window.screen.width<600&&'block'}}>{v}<b>, </b></span>\r\n                      }):'' }\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">Gender</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author\r\n                        ? (author.sex === \"M\" && \"Male\") ||\r\n                          (author.sex === \"F\" && \"Female\")\r\n                        : \"\"}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3 col-6\">\r\n                    <h6 className=\"mb-0\">Date of Birth</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 col-6 text-secondary\">\r\n                    <span className=\"profile__info\">\r\n                      {\" \"}\r\n                      {author ? author.date_of_birth : \"\"}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\Profile.jsx",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\Google.js",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\user\\Facebook.js",["154"],"import React, { useState } from \"react\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { authenticate, datasetListFunc } from \"../../services/Api\";\r\nimport { facebookLogin } from \"../../services/user/userApi\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport './sociallogin.css'\r\nfunction Facebook() {\r\n  const [,dispatch] = useStateValue()\r\n  const responseFacebook = (response) => {\r\n    const { name, email, accessToken } = response;\r\n    const first_name = name.split(\" \")[0];\r\n    const last_name = name.split(\" \")[1];\r\n    const data = {\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      email: email,\r\n      facebook_token: accessToken,\r\n    };\r\n    facebookLogin(data).then(data=>{\r\n      authenticate(data.data.token, () => {\r\n          dispatch({\r\n            type: \"ADDUSER\",\r\n            data: data.data,\r\n          });\r\n        });\r\n        datasetListFunc().then((items) => {\r\n          dispatch({\r\n            type: \"ADDDATASET\",\r\n            data: items.data,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n   <FacebookLogin\r\n          appId=\"427757665031934\"\r\n          autoLoad={false}\r\n          fields=\"name,email,picture\"\r\n          callback={responseFacebook}\r\n          cssClass='facebook'\r\n          // icon={\"fa fa-facebook\"}\r\n        />\r\n    </>\r\n  );\r\n}\r\nexport default Facebook;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\CreateDataset.js",["155","156"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createdataset, datasetListFunc, updatedataset } from \"../../services/Api\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport Params from \"./Params\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./style.css\";\r\nfunction CreateDataset(props) {\r\n  const history = useHistory();\r\n  const [, dispatch] = useStateValue();\r\n  const [params, setparams] = useState({\r\n    attributes: \"\",\r\n    gender: \"\",\r\n    morality: \"\",\r\n    size: 0,\r\n    name: \"\",\r\n    type_dataset: \"parameter\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setparams({ ...params, [e[0].name]: e[0].value });\r\n  };\r\n\r\n  const onSelect = (e) => {\r\n    let attributes = [];\r\n    e.map((v) => attributes.push(v.name));\r\n\r\n    var unique = attributes.filter(onlyUnique);\r\n    setparams({ ...params, attributes: unique });\r\n  };\r\n  const onRemove = (e) => {\r\n    let attributes = [];\r\n    e.map((v) => {\r\n      attributes.push(v.name);\r\n    });\r\n\r\n    setparams({ ...params, attributes: attributes });\r\n  };\r\n  const onlyUnique = (value, index, self) => {\r\n    return self.indexOf(value) === index;\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      params.attributes == [] ||\r\n      params.gender === \"\" ||\r\n      params.morality === \"\" ||\r\n      params.size === 0\r\n    ) {\r\n      alert(\"Please Select Parameters!\");\r\n    } else if (params.name === \"\") {\r\n      alert(\"Please Type Dataset Name\");\r\n    } else {\r\n      if (props.create === true) {\r\n        createdataset(JSON.stringify(params));\r\n        console.log(\"hylo\");\r\n      }\r\n      else{\r\n        dispatch({\r\n          type:'ADDCURRENTDATASET',\r\n          data:params\r\n        })\r\n        updatedataset(JSON.stringify(params),props.id)\r\n        .then(data=>{\r\n          console.log(data)\r\n        })\r\n      }\r\n      datasetListFunc().then((items) => {\r\n        dispatch({\r\n          type: \"ADDDATASET\",\r\n          data: items.data,\r\n        });\r\n      });\r\n      setparams({ ...params, name: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Params\r\n        submit={onSubmit}\r\n        handleChange={handleChange}\r\n        onSelect={onSelect}\r\n        onRemove={onRemove}\r\n      />\r\n      <div className=\"px-3 w-100 text-center\">\r\n        <button\r\n          className=\"btn btn-light my-2 w-100\"\r\n          onClick={() => props.create?history.push(\"/manual\"):history.push(`/dataseteditmanual/${props.id}`)}\r\n        >\r\n          Advance Selection\r\n        </button>\r\n      </div>\r\n      <div className=\"px-3\">\r\n        <TextField\r\n          autoComplete=\"Dname\"\r\n          name=\"name\"\r\n          variant=\"outlined\"\r\n          required\r\n          // className='px-2 py-1'\r\n          value={params.name}\r\n          onChange={(e) => setparams({ ...params, name: e.target.value })}\r\n          fullWidth\r\n          label=\"Dataset Name\"\r\n          autoFocus\r\n        />\r\n        <div className=\"\">\r\n          <Button\r\n            onClick={onSubmit}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={props.classes.submit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDataset;\r\n","C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\Loading.jsx",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\AuthorsList.jsx",[],"C:\\Users\\Usama\\Desktop\\NewApp\\newapp\\src\\components\\dataset\\Params.js",["157"],"import React, { useState } from \"react\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\n\r\nfunction Params(props) {\r\n  const { handleChange, onSelect, onRemove } = props;\r\n  const attributes = [\r\n    { name: \"Politician\", id: 1 },\r\n    { name: \"Athlete\", id: 2 },\r\n    { name: \"Athlete1\", id: 3 },\r\n    { name: \"Athlete2\", id: 4 },\r\n    { name: \"Athlete3\", id: 5 },\r\n\r\n  ];\r\n  const gender = [\r\n    { value: \"M\", id: 1, name: \"gender\", display: \"Male\" },\r\n    { value: \"F\", id: 2, name: \"gender\", display: \"Female\" },\r\n    { value: \"All\", id: 3, name: \"gender\", display: \"All\" },\r\n  ];\r\n  const morality = [\r\n    { value: \"Living\", id: 1, name: \"morality\" },\r\n    { value: \"Deceased\", id: 2, name: \"morality\" },\r\n    { value: \"All\", id: 3, name: \"morality\" },\r\n  ];\r\n  const size = [\r\n    { value: \"25\", id: 1, name: \"size\" },\r\n    { value: \"50\", id: 2, name: \"size\" },\r\n    { value: \"100\", id: 3, name: \"size\" },\r\n    { value: \"150\", id: 4, name: \"size\" },\r\n    { value: \"200\", id: 5, name: \"size\" },\r\n    { value: \"All\", id: 6, name: \"size\" },\r\n  ];\r\n  const style = {\r\n    searchBox: {\r\n      fontSize: \"14px\",\r\n      minHeight: \"40px\",\r\n    },\r\n  };\r\n\r\n  const parameterForm = () => {\r\n    return (\r\n      <form>\r\n        <div className=\"\">\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Attributes: </h5>\r\n            <Multiselect\r\n              options={attributes}\r\n              displayValue=\"name\"\r\n              onSelect={onSelect}\r\n              showCheckbox={true}\r\n              style={style}\r\n              onRemove={onRemove}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Gender: </h5>\r\n\r\n            <Multiselect\r\n              style={style}\r\n              options={gender}\r\n              displayValue=\"display\"\r\n              onSelect={handleChange}\r\n              id='input__gender'\r\n              singleSelect\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Mortality: </h5>\r\n            <Multiselect\r\n              options={morality}\r\n              style={style}\r\n              displayValue=\"value\"\r\n              id='input__gender'\r\n              onSelect={handleChange}\r\n              singleSelect\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12\">\r\n            <h5>Size: </h5>\r\n            <Multiselect\r\n              options={size}\r\n              placeholder='Size'\r\n              style={style}\r\n              displayValue=\"value\"\r\n              id='input__gender'\r\n              onSelect={handleChange}\r\n              singleSelect\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n  return <>{parameterForm()}</>;\r\n}\r\n\r\nexport default Params;\r\n",{"ruleId":"158","severity":1,"message":"159","line":10,"column":8,"nodeType":"160","messageId":"161","endLine":10,"endColumn":14},{"ruleId":"158","severity":1,"message":"162","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":17},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"158","severity":1,"message":"167","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":11},{"ruleId":"158","severity":1,"message":"168","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":12},{"ruleId":"158","severity":1,"message":"169","line":14,"column":8,"nodeType":"160","messageId":"161","endLine":14,"endColumn":17},{"ruleId":"158","severity":1,"message":"170","line":15,"column":8,"nodeType":"160","messageId":"161","endLine":15,"endColumn":12},{"ruleId":"158","severity":1,"message":"171","line":16,"column":8,"nodeType":"160","messageId":"161","endLine":16,"endColumn":13},{"ruleId":"158","severity":1,"message":"172","line":27,"column":10,"nodeType":"160","messageId":"161","endLine":27,"endColumn":19},{"ruleId":"158","severity":1,"message":"173","line":130,"column":9,"nodeType":"160","messageId":"161","endLine":130,"endColumn":25},{"ruleId":"158","severity":1,"message":"174","line":35,"column":9,"nodeType":"160","messageId":"161","endLine":35,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":59,"column":6,"nodeType":"177","endLine":59,"endColumn":8,"suggestions":"178"},{"ruleId":"158","severity":1,"message":"174","line":133,"column":9,"nodeType":"160","messageId":"161","endLine":133,"endColumn":14},{"ruleId":"158","severity":1,"message":"179","line":29,"column":10,"nodeType":"160","messageId":"161","endLine":29,"endColumn":17},{"ruleId":"158","severity":1,"message":"180","line":30,"column":10,"nodeType":"160","messageId":"161","endLine":30,"endColumn":15},{"ruleId":"158","severity":1,"message":"181","line":2,"column":27,"nodeType":"160","messageId":"161","endLine":2,"endColumn":37},{"ruleId":"158","severity":1,"message":"182","line":2,"column":39,"nodeType":"160","messageId":"161","endLine":2,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":28,"column":25,"nodeType":"185","endLine":28,"endColumn":36},{"ruleId":"175","severity":1,"message":"186","line":28,"column":5,"nodeType":"177","endLine":28,"endColumn":21,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"186","line":21,"column":6,"nodeType":"177","endLine":21,"endColumn":8,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":42,"column":25,"nodeType":"191","messageId":"192","endLine":42,"endColumn":27},{"ruleId":"158","severity":1,"message":"193","line":3,"column":3,"nodeType":"160","messageId":"161","endLine":3,"endColumn":9},{"ruleId":"158","severity":1,"message":"194","line":7,"column":3,"nodeType":"160","messageId":"161","endLine":7,"endColumn":19},{"ruleId":"158","severity":1,"message":"195","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":11},{"ruleId":"158","severity":1,"message":"167","line":11,"column":3,"nodeType":"160","messageId":"161","endLine":11,"endColumn":6},{"ruleId":"158","severity":1,"message":"196","line":12,"column":3,"nodeType":"160","messageId":"161","endLine":12,"endColumn":13},{"ruleId":"158","severity":1,"message":"197","line":16,"column":8,"nodeType":"160","messageId":"161","endLine":16,"endColumn":24},{"ruleId":"158","severity":1,"message":"198","line":17,"column":10,"nodeType":"160","messageId":"161","endLine":17,"endColumn":14},{"ruleId":"175","severity":1,"message":"199","line":17,"column":6,"nodeType":"177","endLine":17,"endColumn":8,"suggestions":"200"},{"ruleId":"189","severity":1,"message":"190","line":84,"column":44,"nodeType":"191","messageId":"192","endLine":84,"endColumn":46},{"ruleId":"158","severity":1,"message":"201","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":35,"column":15,"nodeType":"204","messageId":"205","endLine":35,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":47,"column":25,"nodeType":"191","messageId":"192","endLine":47,"endColumn":27},{"ruleId":"158","severity":1,"message":"201","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'Box' is defined but never used.","'List' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Copyright' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'getUser' is defined but never used.","'green' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["209"],["210"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["211"],"'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [dispatch]",{"range":"220","text":"221"},"Update the dependencies array to be: [currentDataset, params.id]",{"range":"222","text":"223"},"Update the dependencies array to be: [params.id]",{"range":"224","text":"225"},"Update the dependencies array to be: [props]",{"range":"226","text":"227"},[1956,1958],"[dispatch]",[799,815],"[currentDataset, params.id]",[575,577],"[params.id]",[435,437],"[props]"]